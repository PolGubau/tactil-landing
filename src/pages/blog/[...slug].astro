---
import { type CollectionEntry, getCollection, render } from "astro:content";
import SimilarBlogs from "../../components/blog/SimilarBlogs.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import MdLayout from "../../layouts/MdLayout.astro";
import { getReadingTime } from "../../lib/utils";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<"blog">;

function formatDate(d: Date) {
	const fullDate = d.toLocaleString("en-us", {
		month: "long",
		day: "numeric",
		year: "numeric",
	});

	return fullDate;
}

const post = Astro.props;
const { Content, headings } = await render(post);

const time = getReadingTime(post.body ?? "");
---

<MainLayout>
	<section>
		<a
			href-lang="en-us"
			href="/blog"
			class="text-neutral-500 hover:text-neutral-600 dark:text-neutral-400 dark:hover:text-neutral-300"
		>
			← Back
		</a>
		<h1 class="balance mt-4 font-semibold text-2xl">{post.data.title}</h1>
		<p class="text-neutral-600 text-sm dark:text-neutral-400 flex gap-2">
			<span>
				{formatDate(post.data.publishedAt)}
			</span>
			<span class="text-neutral-500 dark:text-neutral-400">•</span>
			<span>
				{time} min read
			</span>
		</p>

		<article class="relative flex flex-col gap-4">
			<MdLayout headings={headings} backTo="/blog">
				<Content />
			</MdLayout>

			<SimilarBlogs blog={post} />
		</article>
	</section>
</MainLayout>
